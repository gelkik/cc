{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gelkik/Development/code/phase2/cc/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import { getRandomPlaneteer } from '../data/planeteers.js'\n\nimport Header from \"./Header\";\nimport RandomButton from \"./RandomButton\";\nimport PlaneteersContainer from \"./PlaneteersContainer\";\nimport SearchBar from \"./SearchBar\";\n\nfunction App() {\n  _s();\n\n  const [planeteers, setPlaneteers] = useState([]);\n  const [searchQ, setSearchQ] = useState('');\n  const [checked, setChecked] = useState(false);\n\n  function handleNewPlanet(newObj) {\n    setPlaneteers([...planeteers, newObj]);\n  }\n\n  useEffect(() => {\n    fetch('http://localhost:8003/planeteers').then(res => res.json()).then(data => setPlaneteers(data));\n  }, []);\n  const searched = planeteers.filter(planeteer => {\n    return planeteer.name.toLowerCase().includes(searchQ.toLowerCase()) || planeteer.bio.toLowerCase().includes(searchQ.toLowerCase());\n  });\n\n  function handleCheck() {\n    setChecked(checked => !checked);\n    console.log(checked);\n\n    if (checked === true) {\n      setPlaneteers(planeteers.sort((a, b) => a.born !== b.born ? a.born < b.born ? -1 : 1 : 0));\n    }\n  } // if (checked)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      searchQ: searchQ,\n      setSearchQ: setSearchQ,\n      handleCheck: handleCheck,\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RandomButton // getRandomPlaneteer={getRandomPlaneteer()}\n    // planeteers={planeteers}\n    // setPlaneteers={setPlaneteers}\n    , {\n      handleNewPlanet: handleNewPlanet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlaneteersContainer, {\n      planeteers: searched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"toc+3hTxPwJDKpPjusIuA4OeEaY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gelkik/Development/code/phase2/cc/src/components/App.js"],"names":["React","useState","useEffect","Header","RandomButton","PlaneteersContainer","SearchBar","App","planeteers","setPlaneteers","searchQ","setSearchQ","checked","setChecked","handleNewPlanet","newObj","fetch","then","res","json","data","searched","filter","planeteer","name","toLowerCase","includes","bio","handleCheck","console","log","sort","a","b","born"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,UAAD,EAAYC,aAAZ,IAA2BR,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACS,OAAD,EAASC,UAAT,IAAqBV,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACW,OAAD,EAASC,UAAT,IAAqBZ,QAAQ,CAAC,KAAD,CAAnC;;AAEA,WAASa,eAAT,CAAyBC,MAAzB,EAAgC;AAC9BN,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAeO,MAAf,CAAD,CAAb;AACD;;AAEDb,EAAAA,SAAS,CAAC,MAAI;AACZc,IAAAA,KAAK,CAAC,kCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEMG,IAAI,IAAEX,aAAa,CAACW,IAAD,CAFzB;AAGD,GAJQ,EAIP,EAJO,CAAT;AAMA,QAAMC,QAAQ,GAAGb,UAAU,CAACc,MAAX,CAAmBC,SAAD,IAAa;AAC9C,WAAOA,SAAS,CAACC,IAAV,CAAeC,WAAf,GAA6BC,QAA7B,CAAsChB,OAAO,CAACe,WAAR,EAAtC,KAAgEF,SAAS,CAACI,GAAV,CAAcF,WAAd,GAA4BC,QAA5B,CAAqChB,OAAO,CAACe,WAAR,EAArC,CAAvE;AACD,GAFgB,CAAjB;;AAIA,WAASG,WAAT,GAAsB;AACpBf,IAAAA,UAAU,CAAED,OAAD,IAAW,CAACA,OAAb,CAAV;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ;;AACA,QAAIA,OAAO,KAAG,IAAd,EAAmB;AACjBH,MAAAA,aAAa,CAACD,UAAU,CAACuB,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAb,GAAoBF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAA3C,GAA+C,CAAzE,CAAD,CAAb;AAA2F;AAC9F,GAzBY,CA2Bb;;;AAGA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AACE,MAAA,OAAO,EAAExB,OADX;AAEE,MAAA,UAAU,EAAEC,UAFd;AAGE,MAAA,WAAW,EAAEiB,WAHf;AAIE,MAAA,OAAO,EAAEhB;AAJX;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,YAAD,CACE;AACA;AACA;AAHF;AAIE,MAAA,eAAe,EAAEE;AAJnB;AAAA;AAAA;AAAA;AAAA,YARF,eAcE,QAAC,mBAAD;AACE,MAAA,UAAU,EAAEO;AADd;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlDQd,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\n// import { getRandomPlaneteer } from '../data/planeteers.js'\nimport Header from \"./Header\";\nimport RandomButton from \"./RandomButton\";\nimport PlaneteersContainer from \"./PlaneteersContainer\";\nimport SearchBar from \"./SearchBar\";\n\nfunction App() {\n\n  const [planeteers,setPlaneteers]=useState([]);\n  const [searchQ,setSearchQ]=useState('');\n  const [checked,setChecked]=useState(false);\n\n  function handleNewPlanet(newObj){\n    setPlaneteers([...planeteers,newObj]);\n  }\n\n  useEffect(()=>{\n    fetch('http://localhost:8003/planeteers')\n    .then(res=>res.json())\n    .then(data=>setPlaneteers(data))\n  },[])\n\n  const searched = planeteers.filter((planeteer)=>{\n    return planeteer.name.toLowerCase().includes(searchQ.toLowerCase()) || planeteer.bio.toLowerCase().includes(searchQ.toLowerCase());\n  })\n\n  function handleCheck(){\n    setChecked((checked)=>!checked)\n    console.log(checked);\n    if (checked===true){\n      setPlaneteers(planeteers.sort((a, b) => a.born !== b.born ? a.born < b.born ? -1 : 1 : 0))}\n  }\n\n  // if (checked)\n\n\n  return (\n    <div>\n      <Header />\n      <SearchBar \n        searchQ={searchQ}\n        setSearchQ={setSearchQ}\n        handleCheck={handleCheck}\n        checked={checked}\n      />\n      <RandomButton \n        // getRandomPlaneteer={getRandomPlaneteer()}\n        // planeteers={planeteers}\n        // setPlaneteers={setPlaneteers}\n        handleNewPlanet={handleNewPlanet}\n      />\n      <PlaneteersContainer \n        planeteers={searched}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}